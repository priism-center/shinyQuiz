[{"path":"https://priism-center.github.io/shinyQuiz/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 shinyQuiz authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/articles/custom_questions.html","id":"customizing-prompts","dir":"Articles","previous_headings":"","what":"Customizing prompts","title":"Customizing Questions","text":"create_question can take html create_question_raw even flexible.","code":"create_question(   htmltools::div(     htmltools::p(\"A custom question with a plot\"),     shiny::renderPlot(plot(rnorm(100), rnorm(100))),   ),   add_slider(10, 50, 30, correct = 20),   label = 'Select 20' ) create_question_raw"},{"path":[]},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/articles/get_started.html","id":"creating-questions","dir":"Articles","previous_headings":"","what":"Creating questions","title":"Get Started","text":"{ show different question types }","code":"q1 <- create_question(   'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id ornare augue, fringilla molestie metus. Donec eget tortor tincidunt, sagittis dui volutpat, finibus est. Select nulla.',   add_choice('Nulla vel'),   add_choice('auctor nulla'),   add_choice('nulla', correct = TRUE) )  q2 <- create_question(   'Molestie metus. Maecenas tincidunt maximus viverra. Sed non gravida quam. Phasellus at iaculis leo. Mauris congue aliquet dui, ut dapibus lorem porttitor sed.',   add_choice(500),   add_choice('600', correct = TRUE),   add_choice('six hundred'),   type = 'multiple',   label = 'Select 600' )  q3 <- create_question(   'Sed non gravida quam. Phasellus at iaculis leo.',   add_slider(10, 50, 30, correct = 20),   label = 'Select 20' )"},{"path":"https://priism-center.github.io/shinyQuiz/articles/get_started.html","id":"forming-a-quiz","dir":"Articles","previous_headings":"","what":"Forming a quiz","title":"Get Started","text":"Preview light Shiny app","code":"quiz <- create_quiz(q1, q2, q3) quiz preview_app(quiz)"},{"path":"https://priism-center.github.io/shinyQuiz/articles/get_started.html","id":"integrating-into-your-shiny-application","dir":"Articles","previous_headings":"","what":"Integrating into your Shiny application","title":"Get Started","text":"{ show example Shiny app } { show module output }","code":""},{"path":"https://priism-center.github.io/shinyQuiz/articles/get_started.html","id":"adjusting-options","dir":"Articles","previous_headings":"","what":"Adjusting options","title":"Get Started","text":"{ illustrate adjusting set_quiz_options: quiz logic, namespace, messages}","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Marlo. Author, maintainer. George Perrett. Author.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marlo J, Perrett G (2023). shinyQuiz: Create Gradable Quizzes R Shiny. https://priism-center.github.io/shinyQuiz/, https://github.com/priism-center/shinyQuiz.","code":"@Manual{,   title = {shinyQuiz: Create Gradable Quizzes for R Shiny},   author = {Joseph Marlo and George Perrett},   year = {2023},   note = {https://priism-center.github.io/shinyQuiz/, https://github.com/priism-center/shinyQuiz}, }"},{"path":"https://priism-center.github.io/shinyQuiz/index.html","id":"shinyquiz","dir":"","previous_headings":"","what":"Create Gradable Quizzes for R Shiny","title":"Create Gradable Quizzes for R Shiny","text":"shinyQuiz R package creating flexible quizzes within R Shiny.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Gradable Quizzes for R Shiny","text":"shinyQuiz currently development available test installing via:","code":"# latest development version # install.packages(\"remotes\") remotes::install_github('priism-center/shinyQuiz')"},{"path":"https://priism-center.github.io/shinyQuiz/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create Gradable Quizzes for R Shiny","text":"","code":"quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id ornare augue, fringilla molestie metus. Donec eget tortor tincidunt, sagittis dui volutpat, finibus est. Select nulla.',     add_choice('Nulla vel'),     add_choice('auctor nulla'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Molestie metus. Maecenas tincidunt maximus viverra. Sed non gravida quam. Phasellus at iaculis leo. Mauris congue aliquet dui, ut dapibus lorem porttitor sed.',     add_choice('ATT'),     add_choice('ATE', correct = TRUE),     add_choice('ATC', correct = TRUE),     label = 'Select ATE and ATC'   ),   create_question(     'Sed non gravida quam. Phasellus at iaculis leo.',     add_slider(10, 50, 30, correct = 20),     label = 'Select 20'   ) )  preview_app(quiz)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_checkmark.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a green checkmark to a div — add_checkmark","title":"Add a green checkmark to a div — add_checkmark","text":"Add green checkmark div","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_checkmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a green checkmark to a div — add_checkmark","text":"","code":"add_checkmark(ns = NULL, id = \"quiz-container\", element = \"h3\")"},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_checkmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a green checkmark to a div — add_checkmark","text":"ns namespace Shiny module id id div add checkmark element element within div place checkmark","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_checkmark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a green checkmark to a div — add_checkmark","text":"called side effect","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_checkmark.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a green checkmark to a div — add_checkmark","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a choice for a question — add_choice","title":"Create a choice for a question — add_choice","text":"Create choice question","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a choice for a question — add_choice","text":"","code":"add_choice(text, correct = FALSE)  add_numeric(correct)  add_slider(min = 0, max = 1, default_position = 0.5, correct)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_choice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a choice for a question — add_choice","text":"text Text choice answer correct Boolean denoting choice correct; numeric slider numeric min minimum value slider range max maximum value slider range default_position default value slider take","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_choice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a choice for a question — add_choice","text":"object class 'quizChoice' object class 'quizChoiceNumeric' object class 'quizChoiceSlider'","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_choice.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a choice for a question — add_choice","text":"add_choice(): Create discrete choice add_numeric(): Create numeric choice add_slider(): Create slider choice","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_choice.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a choice for a question — add_choice","text":"Joseph Marlo George Perrett","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_choice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a choice for a question — add_choice","text":"","code":"add_choice('39') #> An object of class \"quizChoice\" #> Slot \"text\": #> [1] \"39\" #>  #> Slot \"correct\": #> [1] FALSE #>  add_choice('39', TRUE) #> An object of class \"quizChoice\" #> Slot \"text\": #> [1] \"39\" #>  #> Slot \"correct\": #> [1] TRUE #>  add_slider(0, 1, 0.5, 0.8) #> An object of class \"quizChoiceSlider\" #> Slot \"min\": #> [1] 0 #>  #> Slot \"max\": #> [1] 1 #>  #> Slot \"default\": #> [1] 0.5 #>  #> Slot \"correct\": #> [1] 0.8 #>   create_question(  'My question prompt',  add_choice('39'),  add_choice('41', TRUE) ) #> ! Some items like sliders may not show correctly in the viewer"},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_confetti.html","id":null,"dir":"Reference","previous_headings":"","what":"Add confetti celebration animation — add_confetti","title":"Add confetti celebration animation — add_confetti","text":"Requires confetti.css www/css folder","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_confetti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add confetti celebration animation — add_confetti","text":"","code":"add_confetti()"},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_confetti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add confetti celebration animation — add_confetti","text":"div containing divs class \"confetti-piece\"","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_confetti.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add confetti celebration animation — add_confetti","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_message_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ending messages to the quiz — add_message_correct","title":"Add ending messages to the quiz — add_message_correct","text":"Add ending messages quiz","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_message_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ending messages to the quiz — add_message_correct","text":"","code":"add_message_correct(text)  add_message_wrong(text)  add_message_skipped(text)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_message_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ending messages to the quiz — add_message_correct","text":"text Message display","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_message_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ending messages to the quiz — add_message_correct","text":"called side effect","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_message_correct.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Add ending messages to the quiz — add_message_correct","text":"add_message_correct(): Message display user correct add_message_wrong(): Message display user wrong add_message_skipped(): Message display user skipped quiz","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_message_correct.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add ending messages to the quiz — add_message_correct","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_progress_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bootstrap progress bar — add_progress_bar","title":"Create a bootstrap progress bar — add_progress_bar","text":"Create bootstrap progress bar","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_progress_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bootstrap progress bar — add_progress_bar","text":"","code":"add_progress_bar(percent, bg_color)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_progress_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bootstrap progress bar — add_progress_bar","text":"percent percent fill progress bar bg_color Background color","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_progress_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bootstrap progress bar — add_progress_bar","text":"html","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_progress_bar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a bootstrap progress bar — add_progress_bar","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_red_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a red X to a div — add_red_x","title":"Add a red X to a div — add_red_x","text":"Add red X div","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_red_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a red X to a div — add_red_x","text":"","code":"add_red_x(ns = NULL, id = \"quiz-container\", element = \"h3\")"},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_red_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a red X to a div — add_red_x","text":"ns namespace Shiny module id id div add X element element within div place X","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_red_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a red X to a div — add_red_x","text":"called side effect","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/add_red_x.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a red X to a div — add_red_x","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/construct_quiz.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructors for the quiz — construct_quiz","title":"Constructors for the quiz — construct_quiz","text":"Construct quiz quiz question","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/construct_quiz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructors for the quiz — construct_quiz","text":"","code":"construct_quiz(..., options = set_quiz_options())  construct_question(   prompt,   answerUserPrettifier,   answerCorrectPretty,   grader,   ns )  construct_messages(message_correct, message_wrong, message_skipped)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/construct_quiz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructors for the quiz — construct_quiz","text":"... objects class 'quizQuestions'. See construct_question() options list options generated set_quiz_options() prompt htmltools::div represents quiz question answerUserPrettifier function takes user answer prints neatly. wrapped purrr::possibly() catch errors. answerCorrectPretty character prints correct answer neatly grader function takes user answer determines correct. Must take one argument return TRUE FALSE. wrapped purrr::possibly() base::isTRUE() catch errors. ns namespace generated shiny::NS() message_correct string shown end quiz user gets questions correct message_wrong string shown end quiz user gets least one question wrong message_skipped string shown end quiz user skips quiz ends early","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/construct_quiz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructors for the quiz — construct_quiz","text":"object class quiz object class quizQuestion object class quizMessages","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/construct_quiz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructors for the quiz — construct_quiz","text":"See dev/example-app.R current example.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/construct_quiz.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Constructors for the quiz — construct_quiz","text":"construct_quiz(): Construct quiz object construct_question(): Construct question object construct_messages(): Construct messages object","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/construct_quiz.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Constructors for the quiz — construct_quiz","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quiz question — create_question","title":"Create a quiz question — create_question","text":"Create quiz question","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quiz question — create_question","text":"","code":"create_question(   prompt,   ...,   type = c(\"auto\", \"single\", \"multiple\"),   input = c(\"auto\", \"select\", \"checkbox\"),   shuffle = FALSE,   ns = shiny::NS(\"quiz\") )  create_question_raw(   prompt,   grader,   correct_answer_pretty,   user_answer_prettifier = function(user_input) paste0(user_input, collapse = \", \") )"},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quiz question — create_question","text":"prompt Text question prompt. Preferably wrapped htmltools::div(). ... Objects class 'quizChoice' generated add_choice() add_slider(). Named options shiny::selectInput shiny::checkboxGroupInput can passed well. type One c('auto', 'single', 'multiple'). many answers allowed input One c('auto', 'select', 'checkbox') shuffle TRUE FALSE TRUE order choices randomly shuffled ns Namespace function generated shiny::NS() grader function takes user answer determines correct. Must take one argument return TRUE FALSE. wrapped purrr::possibly() base::isTRUE() catch errors. correct_answer_pretty string representing correct answer printed 'pretty' user_answer_prettifier function one argument takes user's answers prints 'pretty'","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a quiz question — create_question","text":"object class quizQuestion object class quizQuestion","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a quiz question — create_question","text":"create_question default method creating quiz questions. create_question_raw() allows html prompt. must contain shiny input accessible via input$answers. namespace also needs care. default inputId shiny::NS('quiz')('answers').","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a quiz question — create_question","text":"create_question(): Create quiz question create_question_raw(): Create quiz question using custom inputs. flexible function.","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a quiz question — create_question","text":"Joseph Marlo, George Perrett Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a quiz question — create_question","text":"","code":"if (FALSE) { q <- create_question(   prompt = 'My prompt explaining what the ATE of this thing should be',   add_choice(\"34\"),   add_choice(\"59\", TRUE),   add_choice(\"98\", TRUE) ) preview_question(q)  q2 <- create_question(   prompt = 'My prompt explaining what the ATC of this thing should be',   add_slider(0, 30, 15, correct = 10)  ) create_quiz(q, q2) } if (FALSE) { q3 <- create_question_raw(   prompt = htmltools::div(     htmltools::p(\"my question\"),     shiny::selectInput(       inputId = shiny::NS('quiz')('answers'),       label = 'Select 5',       choices = c(4, 5, 6)     )  ),  grader = \\(user_input) user_input == '5',  correct_answer_pretty = '5' ) create_quiz(q3, q2) }"},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question_sandbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sandbox question — create_question_sandbox","title":"Create a sandbox question — create_question_sandbox","text":"Create quasi-infinite questions.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question_sandbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sandbox question — create_question_sandbox","text":"","code":"create_question_sandbox(.f, n = 50)  verify_question_sandbox(.f)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question_sandbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sandbox question — create_question_sandbox","text":".f function outputs object class quizQuestion. function can arguments must able produce random permutations questions. easiest way ensure including create_question create_question_raw call inside function (see example). n numeric value indicating many draw function .f include random question bank.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question_sandbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sandbox question — create_question_sandbox","text":"n number objects class quizQuestion","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question_sandbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a sandbox question — create_question_sandbox","text":"create_question_sandbox() takes user generated function .f. function passed  .f argument creates random prompt along updated answer, function passed .f argument must return object class quizQuestion. create_question_sandbox() automatically check ensure function passed .f appropriate format. n argument controls many random draws  function passed .f included question bank quiz. Higher values n allow unique questions extreme values n may also lead slower performance. create quiz n randomly generated questions, create_question_sandbox can passed argument create_quiz.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question_sandbox.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a sandbox question — create_question_sandbox","text":"verify_question_sandbox(): Verify input function correct structure","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question_sandbox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a sandbox question — create_question_sandbox","text":"George Perrett, Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_question_sandbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sandbox question — create_question_sandbox","text":"","code":"if (FALSE) {  # a function that generates a random question random_question <- function() {   number <- round(rnorm(1, 30, 10), 0)   rand_prompt <- paste('Is', number, 'an even number?')      # using create_question inside the function helps to ensure correct class   q <- create_question(prompt = rand_prompt,                        add_choice('Yes, it is even', correct = number%%2 == 0),                         add_choice('No, it is odd', correct = number%%2 != 0))      return(q) }  # create a quiz with a question bank of 20 randomly generated questions create_quiz(   create_question_sandbox(.f = random_question, n = 20),    options = set_quiz_options(sandbox = TRUE) ) }"},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_quiz.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quiz — create_quiz","title":"Create a quiz — create_quiz","text":"Create quiz","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_quiz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quiz — create_quiz","text":"","code":"create_quiz(..., options = set_quiz_options())"},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_quiz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quiz — create_quiz","text":"... objects class 'quizQuestions'. See create_question(), create_question_raw() options list options generated set_quiz_options()","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_quiz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a quiz — create_quiz","text":"object class quiz","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_quiz.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a quiz — create_quiz","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/create_quiz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a quiz — create_quiz","text":"","code":"quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ) )"},{"path":"https://priism-center.github.io/shinyQuiz/reference/is_truthy.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a value is truthy — is_truthy","title":"Check if a value is truthy — is_truthy","text":"value truthy unless FALSE, NA, NULL, empty data.frame, empty list.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/is_truthy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a value is truthy — is_truthy","text":"","code":"is_truthy(x)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/is_truthy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a value is truthy — is_truthy","text":"x expression whose truthiness value want determine","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/is_truthy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a value is truthy — is_truthy","text":"boolean","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/is_truthy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if a value is truthy — is_truthy","text":"Modified shiny::isTruthy","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/is_truthy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if a value is truthy — is_truthy","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/is_truthy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a value is truthy — is_truthy","text":"","code":"shinyQuiz:::is_truthy(TRUE) #> [1] TRUE shinyQuiz:::is_truthy(FALSE) #> [1] FALSE shinyQuiz:::is_truthy(1) #> [1] TRUE shinyQuiz:::is_truthy(0) #> [1] TRUE shinyQuiz:::is_truthy(NULL) #> [1] FALSE shinyQuiz:::is_truthy(NA) #> [1] FALSE shinyQuiz:::is_truthy(data.frame()) #> [1] FALSE shinyQuiz:::is_truthy(data.frame(x = 1)) #> [1] TRUE"},{"path":"https://priism-center.github.io/shinyQuiz/reference/preview_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for previewing quizzes — preview_app","title":"Tools for previewing quizzes — preview_app","text":"Launch viewer preview structure questions quiz.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/preview_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tools for previewing quizzes — preview_app","text":"","code":"preview_app(quiz, launch_browser = TRUE)  preview_quiz(quiz, launch_browser = FALSE)  preview_question(question, launch_browser = FALSE)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/preview_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tools for previewing quizzes — preview_app","text":"quiz object class 'quiz' preview launch_browser launch web browser? question object class 'quizQuestion' preview","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/preview_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tools for previewing quizzes — preview_app","text":"Called side effect","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/preview_app.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Tools for previewing quizzes — preview_app","text":"preview_app(): Preview quiz full operability preview_quiz(): Quick preview quiz preview_question(): Quick preview single question","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/preview_app.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tools for previewing quizzes — preview_app","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/preview_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tools for previewing quizzes — preview_app","text":"","code":"if (FALSE) { quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ) ) preview_app(quiz) }"},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for a quiz — quiz-class","title":"S4 class for a quiz — quiz-class","text":"S4 class quiz","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for a quiz — quiz-class","text":"none, sets class","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for a quiz — quiz-class","text":"questions list. list quizQuestions options list. list generated set_quiz_options()","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 class for a quiz — quiz-class","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoice-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for a quiz choices — quizChoice-class","title":"S4 class for a quiz choices — quizChoice-class","text":"S4 class quiz choices","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoice-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for a quiz choices — quizChoice-class","text":"none, sets class","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoice-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for a quiz choices — quizChoice-class","text":"text character. correct logical.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoice-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 class for a quiz choices — quizChoice-class","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoiceNumeric-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for a quiz numeric response — quizChoiceNumeric-class","title":"S4 class for a quiz numeric response — quizChoiceNumeric-class","text":"S4 class quiz numeric response","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoiceNumeric-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for a quiz numeric response — quizChoiceNumeric-class","text":"none, sets class","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoiceNumeric-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for a quiz numeric response — quizChoiceNumeric-class","text":"correct numeric.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoiceNumeric-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 class for a quiz numeric response — quizChoiceNumeric-class","text":"George Perrett","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoiceSlider-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for a quiz sliders — quizChoiceSlider-class","title":"S4 class for a quiz sliders — quizChoiceSlider-class","text":"S4 class quiz sliders","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoiceSlider-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for a quiz sliders — quizChoiceSlider-class","text":"none, sets class","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoiceSlider-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for a quiz sliders — quizChoiceSlider-class","text":"min numeric. max numeric. default numeric. correct numeric.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizChoiceSlider-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 class for a quiz sliders — quizChoiceSlider-class","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizMessages-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for a quiz messages to display at the end — quizMessages-class","title":"S4 class for a quiz messages to display at the end — quizMessages-class","text":"S4 class quiz messages display end","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizMessages-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for a quiz messages to display at the end — quizMessages-class","text":"none, sets class","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizMessages-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for a quiz messages to display at the end — quizMessages-class","text":"message_correct character. message_wrong character. message_skipped character.","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizMessages-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 class for a quiz messages to display at the end — quizMessages-class","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizQuestion-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for a quiz question — quizQuestion-class","title":"S4 class for a quiz question — quizQuestion-class","text":"S4 class quiz question","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizQuestion-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for a quiz question — quizQuestion-class","text":"none, sets class","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizQuestion-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for a quiz question — quizQuestion-class","text":"prompt shiny.tag. answerUser list. answerUserPrettifier function. answerCorrectPretty character. grader function.","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizQuestion-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 class for a quiz question — quizQuestion-class","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizQuestionSandbox-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for a sandbox quiz question — quizQuestionSandbox-class","title":"S4 class for a sandbox quiz question — quizQuestionSandbox-class","text":"S4 class sandbox quiz question","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizQuestionSandbox-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for a sandbox quiz question — quizQuestionSandbox-class","text":"none, sets class","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizQuestionSandbox-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for a sandbox quiz question — quizQuestionSandbox-class","text":"prompt shiny.tag. answerUser list. answerUserPrettifier function. answerCorrectPretty character. grader function.","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/quizQuestionSandbox-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 class for a sandbox quiz question — quizQuestionSandbox-class","text":"George Perrett, Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a quiz in R Shiny — quiz_ui","title":"Run a quiz in R Shiny — quiz_ui","text":"shiny Module implement quiz","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a quiz in R Shiny — quiz_ui","text":"","code":"quiz_ui(quiz)  quiz_server(quiz)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a quiz in R Shiny — quiz_ui","text":"quiz object class quiz. See construct_quiz()","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a quiz in R Shiny — quiz_ui","text":"reactive object showing results quiz","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz_ui.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Run a quiz in R Shiny — quiz_ui","text":"quiz_ui(): UI side function quiz_server(): Server side function","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz_ui.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run a quiz in R Shiny — quiz_ui","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/quiz_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a quiz in R Shiny — quiz_ui","text":"","code":"if (FALSE) { quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ) )  ui <- shiny::fluidPage(   htmltools::div(     style = \"max-width: 700px\",     quiz_ui(id = 'quiz')    )  ) server <- function(input, output, session) {  quiz_server(quiz) } shinyApp(ui, server) }"},{"path":"https://priism-center.github.io/shinyQuiz/reference/scroll_to_div.html","id":null,"dir":"Reference","previous_headings":"","what":"Scroll the webpage to a certain div — scroll_to_div","title":"Scroll the webpage to a certain div — scroll_to_div","text":"Scroll webpage certain div","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/scroll_to_div.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scroll the webpage to a certain div — scroll_to_div","text":"","code":"scroll_to_div(ns = NULL, id = \"quiz-container\")"},{"path":"https://priism-center.github.io/shinyQuiz/reference/scroll_to_div.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scroll the webpage to a certain div — scroll_to_div","text":"ns namespace Shiny module id id div","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/scroll_to_div.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scroll the webpage to a certain div — scroll_to_div","text":"called side effect","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/scroll_to_div.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scroll the webpage to a certain div — scroll_to_div","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/set_quiz_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the options for the quiz — set_quiz_options","title":"Set the options for the quiz — set_quiz_options","text":"options passed quiz.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/set_quiz_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the options for the quiz — set_quiz_options","text":"","code":"set_quiz_options(   ns = shiny::NS(\"quiz\"),   messages,   sandbox = NULL,   sandbox_resample_n = 50,   end_on_first_wrong = !sandbox,   embed = FALSE,   progress_bar = !sandbox,   progress_bar_color = \"#609963\",   ... )  create_messages(message_correct, message_wrong, message_skipped)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/set_quiz_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the options for the quiz — set_quiz_options","text":"ns namespace generated shiny::NS(). using custom namespaces, individual create_question() requires namespace well. messages object class quizMessages generated create_messages() containing messages show end. provided, defaults used. sandbox boolean. TBD sandbox_resample_n number question resamples sandbox mode end_on_first_wrong quiz immediately end user gets one question wrong? embed boolean. TBD TODO: remove? progress_bar boolean. Show progress bar UI top quiz progress_bar_color Color code progress bar background ... named options pass quiz message_correct string shown end quiz user gets questions correct message_wrong string shown end quiz user gets least one question wrong message_skipped string shown end quiz user skips quiz ends early","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/set_quiz_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the options for the quiz — set_quiz_options","text":"list object class quizMessages","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/set_quiz_options.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Set the options for the quiz — set_quiz_options","text":"set_quiz_options(): Sets options quiz create_messages(): Create messages object","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/set_quiz_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the options for the quiz — set_quiz_options","text":"","code":"quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ),   options = set_quiz_options(sandbox = TRUE) ) quiz@options <- set_quiz_options(sandbox = FALSE)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/sm_get_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for managing the quiz state machine — sm_get_state","title":"Functions for managing the quiz state machine — sm_get_state","text":"quiz implemented via state machine framework. states question final state quiz ends. one state can active time. question text answers shown depend state active.","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/sm_get_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for managing the quiz state machine — sm_get_state","text":"","code":"sm_get_state(store, variable = NULL, state = NULL)  sm_set_state(store, variable, value, state = NULL)  sm_is_current_correct(store)  sm_check_is_each_correct(store)  sm_is_all_correct(store)  sm_quiz_in_sandbox_mode(store)  sm_quiz_is_complete(store)  sm_logic_end_on_first_wrong(store)  sm_ui_format_prompts(quiz)  sm_ui_format_prompt(prompt, i)  sm_ui_quiz_complete(store, ns, messages)  sm_ui_complete_report(store)  sm_ui_question(store, ns)  sm_show_progress(store)  sm_resample_questions_if_sandbox(quiz, n = 50)  sm_create_reactive_store(quiz)  sm_score_quiz(store)  sm_summary(store, quiz)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/sm_get_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for managing the quiz state machine — sm_get_state","text":"store list formatted like example variable one c('current-question', 'current-correct-answer', 'next-state', 'current-response') state one c('quiz-question-1', ..., 'quiz-question') quiz object class 'quiz' n Number resamples make","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/sm_get_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for managing the quiz state machine — sm_get_state","text":"depends function questions reactiveValues","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/sm_get_state.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for managing the quiz state machine — sm_get_state","text":"get set functions retrieving state values setting values. states originally created via reactiveValues call within Shiny server (list outside Shiny; see example ).","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/sm_get_state.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Functions for managing the quiz state machine — sm_get_state","text":"sm_get_state(): Getter function state machine sm_set_state(): Setter function state machine sm_is_current_correct(): Check current-response correct sm_check_is_each_correct(): Check recorded answer correct return boolean vector sm_is_all_correct(): Check recorded answers correct sm_quiz_in_sandbox_mode(): Check quiz sandbox mode sm_quiz_is_complete(): Check quiz complete sm_logic_end_on_first_wrong(): Check quiz end early user fails question sm_ui_format_prompts(): Add headers containing question number questions quiz sm_ui_format_prompt(): Add header denoting question number sm_ui_quiz_complete(): UI show quiz completed sm_ui_complete_report(): UI show score table correct answers display end sm_ui_question(): UI show current question sm_show_progress(): Show progress bar stipulated sm_resample_questions_if_sandbox(): Create quasi infinite quiz resampling questions n times sm_create_reactive_store(): Create main store object handles state(s) sm_score_quiz(): Calculate percent questions correct sm_summary(): Generate summary quiz output Shiny module","code":""},{"path":[]},{"path":"https://priism-center.github.io/shinyQuiz/reference/sm_get_state.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for managing the quiz state machine — sm_get_state","text":"Joseph Marlo","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/sm_get_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for managing the quiz state machine — sm_get_state","text":"","code":"if (FALSE) { quiz <- create_quiz(   create_question(     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Select nulla.',     add_choice('auctor'),     add_choice('nulla', correct = TRUE)   ),   create_question(     'Mauris congue aliquet dui, ut dapibus lorem porttitor sed. Select 600.',     add_choice('600', correct = TRUE),     add_choice('800')   ) ) store <- sm_create_reactive_store(quiz) sm_get_state(store) sm_get_state(store, 'next-state') sm_get_state(store, 'current-question') sm_check_is_each_correct(store) sm_quiz_in_sandbox_mode(store) }"},{"path":"https://priism-center.github.io/shinyQuiz/reference/verify_question_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify quiz elements are the correct format — verify_options_structure","title":"Verify quiz elements are the correct format — verify_options_structure","text":"Verify quiz elements correct format","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/verify_question_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify quiz elements are the correct format — verify_options_structure","text":"","code":"verify_options_structure(options)  verify_question_structure(question)  verify_input_id(prompt)  verify_n_args(fn, n)  verify_messages_structure(messages)  verify_quiz_structure(quiz)"},{"path":"https://priism-center.github.io/shinyQuiz/reference/verify_question_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify quiz elements are the correct format — verify_options_structure","text":"question object class quizQuestion","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/verify_question_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify quiz elements are the correct format — verify_options_structure","text":"invisible TRUE tests passed","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/verify_question_structure.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Verify quiz elements are the correct format — verify_options_structure","text":"verify_options_structure(): Verify options right structure verify_question_structure(): Verify question right structure verify_input_id(): Verify function input id = 'answers' verify_n_args(): Verify function n arguments verify_messages_structure(): Verify messages correct structure verify_quiz_structure(): Verify quiz correct structure","code":""},{"path":"https://priism-center.github.io/shinyQuiz/reference/verify_question_structure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verify quiz elements are the correct format — verify_options_structure","text":"Joseph Marlo","code":""}]
